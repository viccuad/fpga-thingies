{"name":"Fpga-thingies","tagline":"Little designs specified with vhdl for implementing on a spartan3. handmade  rt diagrams included,","body":"# FPGA-THINGIES \r\n\r\nA bunch of little hardware designs in synthesis-able VHDL. Designed to be\r\nimplemented on a Spartan3 FPGA, and done using Xilinx ISE webpack 14.3. The vhdl\r\ncode is intended to be as understandable as possible (e.g., process are written\r\nto be as close as the rt diagram, instead of wrapping various components in one\r\nprocess).\r\n\r\nnotice: most of the code is in Spanish. Make an issue if you want it translated.\r\nEach design has attached pdfs with handmade rt diagrams.\r\n\r\n## DESIGNS   \r\n#### Chronometer\r\nSimple start-stop chronometer, that counts seconds\r\nMOD 60 and minutes MOD 60. It displays tenths of second on one 7-segment\r\ndisplay, and you can choose with a switch to display seconds or minutes in 2\r\nmore 7-segments displays.  With the start-stop push button, you can start-stop\r\nthe count at any time. With the clear button, you can clear the count to 0 at\r\nany time.\r\n\r\nIt's done using a 50 Mhz clock, debouncers and synchronizers, and chained\r\ncounters.\r\n\r\n#### Monophonic keyboard \r\nAn electronic monophonic keyboard (it can only generate 1\r\nnote simultaneously). It generates 1 octave (13 notes), from the central C (Do\r\nin latin notes), using an equal tempered scale. For input it uses a PS2\r\nkeyboard(keys: A, W, S, E, D, F, T, G, Y, H, U, J, K).\r\n\r\nIt's done using a PS2 interface (to deserialize the pressing/depressing\r\nscancodes), a ROM (storing the needed cicles for the counter),  a counter with a\r\nT flip-flop (the sound generator) and a FSM.\r\n\r\n#### Pong\r\nTypical all hardware game: you have a ball, and two rackets to play.\r\nThe VGA synchronism is made with two counters and combinatorial logic. The movement of the ball is rendered by two counters (horizontal and vertical), and each racket has a counter for its vertical movement. Collisions are made with combinatorial logic. A PS2 keyboard is connected to a PS2 module, the key presses from it are logged by a FSM.\r\n\r\npong video: http://youtu.be/23qtBYbF7Ng\r\n\r\n#### Tron game\r\nAs seen in Tron films, two light bikes chase each other and try to lock/slash the opponent with their light trails\r\nThe VGA synchronism is made with two counters and combinatorial logic. A bike movement is rendered by two counters(horizontal and vertical). The trails are stored by two modules of  2x 16Kx1bit RAM memory (each module is for each trail, blue and red), which has two ports: port A iterates the memory at 50Mhzs and acts as the refresh memory, port B iterates at a tenth of a second, and stores the trail. A PS2 keyboard is connected to a PS2 module, the key presses from it are logged by a FSM with flags.\r\n\r\ntron video: http://youtu.be/bUlfAbWu3ew\r\n\r\n## License \r\nAll the source code present here is under the GPLv3 license. Please see the GPv3License.md attached to this repo for more information.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}